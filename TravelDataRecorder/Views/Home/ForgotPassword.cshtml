@model TravelDataRecorder.Model.UserModel
@{
    Layout = null;
    @Scripts.Render("~/bundles/jquery")
}

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Forgot Password</title>
    <link rel="stylesheet" href="~/assets/fonts/iconfonts/mdi/css/materialdesignicons.min.css">
    <!-- endinject -->
    <!-- inject:css -->
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/assets/css/responsive.css">
    <!-- endinject -->
    <link rel="shortcut icon" href="~/assets/images/favicon.png" />

</head>
<body class="login-bodybg">

    @using (Html.BeginForm())
    {
        <div class="container-scroller">
            <div class="container-fluid page-body-wrapper full-page-wrapper">
                <div class="content-wrapper d-flex align-items-center auth">
                    <div class="row w-100">
                        <div class="col-lg-4 mx-auto">
                            <div class="auth-form-light text-left p-5 box-shadow">
                                @*<h4 class="card-title">Change Password</h4>*@

                                <form class="pt-3" id="loginform">
                                    <div class='form-group'>
                                        @Html.LabelFor(x => x.Email)
                                        @if (ViewBag.IsOTPSent != null && ViewBag.IsOTPSent)
                                        {
                                            @Html.TextBoxFor(x => x.Email, new { @placeholder = "Email Address", @class = "form-control form-control-lg form-input", @id = "txtEmail", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.Email, new { @placeholder = "Email Address",  @class = "form-control form-control-lg  form-input",  @id = "txtEmail" })
                                        }

                                    </div>
                                    @if (ViewBag.IsOTPSent != null && ViewBag.IsOTPSent)
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.OTP)
                                            @Html.TextBoxFor(x => x.OTP, new { @class = "form-control form-control-lg text-uppercase", @id = "txtOTP", @maxlength = "6" })
                                        </div>
                                    }
                                    <div class="mt-3">
                                        @Html.Hidden("ID", Model.ID)
                                        @*@Html.HiddenFor(m => m.ID, new { @id = "hdnId" })*@
                                        <input class="btn btn-block btn-info btn-lg font-weight-medium auth-form-btn" id="btnGetOTP" type="submit" value="Get OTP" />
                                    </div>
                                    @*<div class="my-2 d-flex justify-content-between align-items-center">
                                        @Html.ActionLink("Back", "login", new { controller = "home" }, new { @class = "auth-link text-black forgot-text" })
                                    </div>*@
                                    <div class="my-2 d-flex justify-content-between align-items-center">
                                        <u class = "auth-link forgot-text">@Html.ActionLink("Back", "login", new { controller = "home" })</u>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="main-validation" style="display:none"> <p class="show-msg"></p> <i class="mdi mdi-close"></i> </div>
    <script src="~/Scripts/Travel.js"></script>
    @if (ViewBag.IsOTPSent != null)
    {
        <script type="text/javascript">
            showErrorMessage("@ViewBag.Message", 4000, 'warningMessage');

        </script>
        if (ViewBag.IsOTPSent)
        {
            <script type="text/javascript">
                $("#btnGetOTP").val("Change Password");
            </script>
        }
    }

    <script>
        $("#btnGetOTP").on('click', function () {
         
            var email = $("#txtEmail").val();
            var userinput = $.trim($('#useremail').val());
            @*var expr = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;*@
            var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);

            if (email == "") {
                showErrorMessage("Email address is required", 4000, 'errorMessage');
                return false;
            }
            else if (!pattern.test(email))
            {
                 showErrorMessage('Invalid Email', 4000, 'warningMessage');
                 return false;

            }

        });
    </script>
    <!-- container-scroller -->
    <!-- plugins:js -->
    <!-- endinject -->
    <!-- Plugin js for this page-->
    <!-- End plugin js for this page-->
    <!-- inject:js -->
    <script src="~/assets/js/off-canvas.js"></script>
    <script src="~/assets/js/misc.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page-->
    <!-- End custom js for this page-->
</body>
</html>